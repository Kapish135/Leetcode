class Solution {
public:
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        if(!root1) return root2;
        if(!root2) return root1;

        stack<TreeNode*>s1,s2;
        s1.push(root1);
        s2.push(root2);
        while(!s1.empty()){
            TreeNode* c1 = s1.top();
            TreeNode* c2 = s2.top();

            s1.pop(),s2.pop();

            c1->val += c2->val;

            if(c1->right == NULL && c2->right!=NULL) c1->right = c2->right;
            else if(c1->right != NULL && c2->right!=NULL) s1.push(c1->right),s2.push(c2->right);

            if(c1->left == NULL && c2->left!=NULL) c1->left = c2->left;
            else if(c1->left != NULL && c2->left!=NULL) s1.push(c1->left),s2.push(c2->left);

        }
        return root1;
    }
};