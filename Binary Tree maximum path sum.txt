/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findAns(TreeNode* root,int &max_sum){
        if(!root) return 0;

        //if you want perfect understanding then please go to official solution of this question
        //Excellent understanding
        int left = max(findAns(root->left,max_sum),0);
        int right = max(findAns(root->right,max_sum),0);

        max_sum = max(max_sum,left+right+root->val);

        return max(left, right) + root->val;
    }
    int maxPathSum(TreeNode* root) {
        int max_sum = INT_MIN;
        findAns(root,max_sum);
        return max_sum;
    }
};