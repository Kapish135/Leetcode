/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root,vector<vector<int>> &ans,vector<int>&res,int targetSum){
        if(!root) return;

        res.push_back(root->val);
        
        if(root->val == targetSum && !root->left && !root->right){
            ans.push_back(res);
            return;
        }

        if(root->left!=NULL){helper(root->left,ans,res,targetSum-root->val);
        res.pop_back();}
        if(root->right!=NULL){helper(root->right,ans,res,targetSum - root->val);
        res.pop_back();}
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>>ans;
        vector<int>res;
        helper(root,ans,res,targetSum);
        return ans;
    }
};