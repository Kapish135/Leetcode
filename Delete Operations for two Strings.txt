class Solution {
public:
    int helper(string &a, string &b,int i,int j,vector<vector<int>>&dp){

        if(i == a.size() || j == b.size()) return 0;

        if(dp[i][j] != -1) return dp[i][j];
        
        if(a[i] == b[j]) return dp[i][j] = 1 + helper(a,b,i+1,j+1,dp);


        return dp[i][j] = max(helper(a,b,i+1,j,dp), helper(a,b,i,j+1,dp));
    }
    int minDistance(string text1, string text2) {
        int m = text1.size();

        int n = text2.size();

        vector<vector<int>>dp(m,vector<int>(n,-1));
        
        int res =  helper(text1,text2,0,0,dp);
        return m + n -(2*res); //Dry run this code then u will get perfect understanding
    }
};