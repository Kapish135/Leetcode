/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans=INT_MIN;
    void helper(TreeNode*root,int currMax,int currMin){
        if(!root)return;
        ans=max(ans,abs(root->val-currMax));
        ans=max(ans,abs(currMin-root->val));
        currMax=max(currMax,root->val);
        currMin=min(currMin,root->val);

        helper(root->right,currMax,currMin);
        helper(root->left,currMax,currMin);

    }
    int maxAncestorDiff(TreeNode* root) {

        helper(root,root->val,root->val);
        return ans;

        
    }
};