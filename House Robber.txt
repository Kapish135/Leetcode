class Solution {
public:
    int helper(vector<int>&nums,int i,int n,vector<int>&dp){
        if(i > n-1) return 0;
        if(dp[i]!=-1) return dp[i];
        int result1 = helper(nums,i+2,n,dp)+ nums[i];
        int result2 = i==n-1 ? 0:nums[i+1] + helper(nums,i+3,n,dp);

        return dp[i] = max(result1,result2);
    }
    int rob(vector<int>& nums) {
        int n = nums.size();
        if(n ==2) return *max_element(nums.begin(),nums.end());
        vector<int>dp(n,-1);

        return helper(nums,0,n,dp);
    }
};