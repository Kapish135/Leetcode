class Solution {
public:
    map<vector<int>,int>m;
    void helper(vector<vector<int>>&ans,vector<int>&res,vector<int>&nums,int n,int i){
        if(i == n){
            if(res.size() >= 2 && m.find(res) == m.end()){
                ans.push_back(res);
                m[res]++;
            }   
            return;
        }
        if(res.empty() || nums[i] >= res.back()){
            res.push_back(nums[i]);
            helper(ans,res,nums,n,i+1);
            res.pop_back();
        }
        helper(ans,res,nums,n,i+1);
    }
    vector<vector<int>> findSubsequences(vector<int>& nums) {
        int n = nums.size();
        if(n < 2) return {};
        vector<vector<int>>ans;
        vector<int>res;
        helper(ans,res,nums,n,0);
        return ans;
    }
};