class Solution {
public:
    void helper(vector<vector<int>>&s,vector<bool>&vis,int ind){
        vis[ind] = true;
        for(int i = 0;i < s.size();i++){
            if(!vis[i] && (s[ind][0] == s[i][0] || s[ind][1] == s[i][1]))helper(s,vis,i);
        }
    }

    //logic is to do dfs by using visited array
    int removeStones(vector<vector<int>>& stones) {
        int n = stones.size();
        vector<bool>vis(n,false);

        int cnt = 0;
        for(int i = 0;i < stones.size();i++){

            if(vis[i]) continue;

            cnt++;

            helper(stones,vis,i); 
        }
        return n - cnt;
    }
};