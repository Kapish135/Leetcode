class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int sum=0;
        int count =0;

        unordered_map<int,int>m;
        m[sum] = 1; //we have to do this because if(k == 1) and element is also 1 then (1-1) is 0.

        for(int i=0;i<nums.size();i++){
            sum += nums[i]; //this is prefix sum
            if(m.find(sum - k) != m.end()){
                count = count + m[sum - k]; 
            }

            m[sum]++; //we have to do sum++ dry run this example then u understand nums = [1,-1,0], k = 0
        }
        return count;
    }
};