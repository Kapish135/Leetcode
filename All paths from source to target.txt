class Solution {
public:
    void dfs(int i, vector<vector<int>>& graph,vector<vector<int>>&ans,int n,vector<int>res){
        res.push_back(i);
        if(i == n-1){
            ans.push_back(res);
            return;
        }
        for(auto a:graph[i]) dfs(a,graph,ans,n,res);
    }
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<vector<int>>ans;
        vector<int>res;
        dfs(0,graph,ans,n,res);
        return ans;
    }
};